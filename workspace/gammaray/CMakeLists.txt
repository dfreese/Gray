add_library(gammaray
    Daq/BlurProcess.h
    Daq/BlurProcess.cpp
    Daq/BlurFunctors.h
    Daq/BlurFunctors.cpp
    Daq/CoincProcess.h
    Daq/CoincProcess.cpp
    Daq/DaqModel.h
    Daq/DaqModel.cpp
    Daq/DeadtimeProcess.h
    Daq/DeadtimeProcess.cpp
    Daq/FilterProcess.h
    Daq/FilterProcess.cpp
    Daq/FilterFunctors.h
    Daq/FilterFunctors.cpp
    Daq/Mapping.h
    Daq/Mapping.cpp
    Daq/MergeProcess.h
    Daq/MergeProcess.cpp
    Daq/MergeFunctors.h
    Daq/MergeFunctors.cpp
    Daq/SortProcess.h
    Daq/SortProcess.cpp
    Daq/Process.h
    Daq/Process.cpp
    Daq/ProcessFactory.h
    Daq/ProcessFactory.cpp
    Graphics/CameraView.cpp
    Graphics/CameraView.h
    Graphics/Light.h
    Graphics/Material.cpp
    Graphics/Material.h
    Graphics/MaterialBase.h
    Graphics/SceneDescription.cpp
    Graphics/SceneDescription.h
    Graphics/TransformViewable.cpp
    Graphics/TransformViewable.h
    Graphics/View.h
    Graphics/ViewableBase.cpp
    Graphics/ViewableBase.h
    Graphics/ViewableBezierSet.cpp
    Graphics/ViewableBezierSet.h
    Graphics/ViewableCone.cpp
    Graphics/ViewableCone.h
    Graphics/ViewableCylinder.cpp
    Graphics/ViewableCylinder.h
    Graphics/ViewableEllipsoid.cpp
    Graphics/ViewableEllipsoid.h
    Graphics/ViewableParallelepiped.cpp
    Graphics/ViewableParallelepiped.h
    Graphics/ViewableParallelogram.cpp
    Graphics/ViewableParallelogram.h
    Graphics/ViewableSphere.cpp
    Graphics/ViewableSphere.h
    Graphics/ViewableTorus.cpp
    Graphics/ViewableTorus.h
    Graphics/ViewableTriangle.cpp
    Graphics/ViewableTriangle.h
    Graphics/VisiblePoint.h
    Gray/Config.h
    Gray/Config.cpp
    Gray/GammaMaterial.h
    Gray/GammaRayTrace.cpp
    Gray/GammaRayTrace.h
    Gray/LoadDetector.cpp
    Gray/LoadDetector.h
    Gray/LoadMaterials.cpp
    Gray/LoadMaterials.h
    Gray/Mpi.cpp
    Gray/Mpi.h
    Gray/Simulation.cpp
    Gray/Simulation.h
    KdTree/DoubleRecurse.cpp
    KdTree/DoubleRecurse.h
    KdTree/KdTree.h
    KdTree/KdTree.cpp
    Math/Math.h
    Math/Math.cpp
    Output/BinaryFormat.h
    Output/Detector.cpp
    Output/Detector.h
    Output/DetectorArray.cpp
    Output/DetectorArray.h
    Output/Input.cpp
    Output/Input.h
    Output/IO.cpp
    Output/IO.h
    Output/Output.cpp
    Output/Output.h
    Physics/Beam.cpp
    Physics/Beam.h
    Physics/GammaStats.cpp
    Physics/GammaStats.h
    Physics/Interaction.cpp
    Physics/Interaction.h
    Physics/Isotope.cpp
    Physics/Isotope.h
    Physics/NuclearDecay.cpp
    Physics/NuclearDecay.h
    Physics/Photon.cpp
    Physics/Photon.h
    Physics/Positron.cpp
    Physics/Positron.h
    Physics/Physics.cpp
    Physics/Physics.h
    Random/Random.cpp
    Random/Random.h
    Random/Transform.h
    Random/Transform.cpp
    Sources/AnnulusCylinderSource.cpp
    Sources/AnnulusCylinderSource.h
    Sources/AnnulusEllipticCylinderSource.cpp
    Sources/AnnulusEllipticCylinderSource.h
    Sources/CylinderSource.cpp
    Sources/CylinderSource.h
    Sources/EllipsoidSource.cpp
    Sources/EllipsoidSource.h
    Sources/EllipticCylinderSource.cpp
    Sources/EllipticCylinderSource.h
    Sources/PointSource.cpp
    Sources/PointSource.h
    Sources/RectSource.cpp
    Sources/RectSource.h
    Sources/Source.h
    Sources/SourceList.cpp
    Sources/SourceList.h
    Sources/SphereSource.cpp
    Sources/SphereSource.h
    Sources/VectorSource.cpp
    Sources/VectorSource.h
    Sources/VoxelSource.cpp
    Sources/VoxelSource.h
    VrMath/Aabb.cpp
    VrMath/Aabb.h
    VrMath/LinearR2.cpp
    VrMath/LinearR2.h
    VrMath/LinearR3.cpp
    VrMath/LinearR3.h
    VrMath/LinearR4.cpp
    VrMath/LinearR4.h
    VrMath/MathMisc.h
    VrMath/PolygonClip.cpp
    VrMath/PolygonClip.h
    VrMath/PolynomialRC.cpp
    VrMath/PolynomialRC.h
    VrMath/Quaternion.cpp
    VrMath/Quaternion.h
)
target_include_directories(gammaray PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(gammaray jsoncpp)

if (MPI_CXX_FOUND)
    add_definitions(-DMPI_COMPILE_ENABLED)
    target_link_libraries(gammaray ${MPI_CXX_LIBRARIES})
    include_directories(${MPI_CXX_INCLUDE_PATH})
    set(CMAKE_CXX_COMPILE_FLAGS ${CMAKE_CXX_COMPILE_FLAGS} ${MPI_CXX_COMPILE_FLAGS})
    set(CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS} ${MPI_CXX_LINK_FLAGS})
endif (MPI_CXX_FOUND)
